{"version":3,"sources":["actions/index.js","components/VideoOptions.js","components/LoadPrevious.js","components/Navbar.js","components/Player.js","components/Notepad.js","components/AppBody.js","components/Linkshare.js","App.js","index.js"],"names":["startNewSession","videoId","type","VideoOptions","props","state","youtubeVideoId","presets","label","id","handleChange","bind","handleStartNewSession","e","this","setState","target","value","setTimeout","map","key","onClick","className","buttonPresets","onChange","disabled","React","Component","connect","currentSession","LoadPrevious","handleLoadPreviousSession","loadPreviousSession","archivedSessions","oldSess","lastModified","toLocaleTimeString","length","archivedSessionOptions","sessionId","Navbar","Player","iFrameHeight","iFrameWidth","myRef","createRef","handleResize","window","addEventListener","current","clientHeight","clientWidth","ref","width","height","src","ReactIFrame","frameBorder","allow","allowFullScreen","Notepad","handleKeyPress","event","preventDefault","textArea","document","getElementById","addNote","notes","note","noteTime","toISOString","noteText","placeholder","onKeyPress","AppBody","App","initialState","action","Date","store","createStore","Object","assign","uuidv4","sessionStart","prevSession","find","filter","console","error","subscribe","log","getState","dispatch","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.157d3715.chunk.js","sourcesContent":["export const startNewSession = videoId => ({\n  type: 'START_NEW_SESSION',\n  videoId,\n});\n\nexport const addNote = noteText => ({\n  type: 'ADD_NOTE',\n  noteText,\n});\n\nexport const loadPreviousSession = sessionId => ({\n  type: 'LOAD_PREVIOUS_SESSION',\n  sessionId,\n});\n","import React from 'react';\nimport '../App.css';\nimport { connect } from 'react-redux'\nimport { startNewSession } from '../actions';\n\nclass VideoOptions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      youtubeVideoId: '',\n      presets: [\n        {\n          label: 'Cooking',\n          id: 'ru4U_T83uOU',\n        },\n        {\n          label: 'Coding React',\n          id: 'sBws8MSXN7A',\n        },\n        {\n          label: \"Solve a Rubik's Cube\",\n          id: 'R-R0KrXvWbc',\n        },\n      ],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStartNewSession = this.handleStartNewSession.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ youtubeVideoId: e.target.value });\n  }\n\n  handleStartNewSession(videoId) {\n    this.props.startNewSession(videoId);\n    setTimeout(() => this.setState({ youtubeVideoId: '' }), 0);\n  }\n\n  buttonPresets() {\n    return this.state.presets.map(({ label, id }) => {\n      return (\n          <button key={id}\n                  onClick={ this.handleStartNewSession.bind(this, id)}\n                  className={this.props.videoId === id ? 'Preset Selected' : 'Preset'}>\n            {label}\n          </button>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Options\">\n        Start a session with one of these topics:\n        <div className=\"Presets\">\n          {this.buttonPresets()}\n        </div>\n        <div className=\"CustomInput\">\n          <span className=\"Info\">Or, enter a valid Youtube video ID and start your own session:</span>\n          <div className=\"InputPair\">\n            <input type=\"text\"\n                   value={ this.state.youtubeVideoId }\n                   onChange={ this.handleChange }\n                   className=\"YoutubeInput\"/>\n            <button onClick={ this.handleStartNewSession.bind(this, this.state.youtubeVideoId) }\n                    disabled={ this.props.videoId === this.state.youtubeVideoId }>\n              Start new session\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    videoId: state.currentSession.videoId,\n  }\n};\n\nexport default connect(\n    mapStateToProps,\n    { startNewSession }\n)(VideoOptions)\n","import React from 'react';\nimport '../App.css';\nimport { connect } from 'react-redux';\nimport { loadPreviousSession } from '../actions';\n\n\nclass LoadPrevious extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { value: 'placeholder' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLoadPreviousSession = this.handleLoadPreviousSession.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value })\n  }\n\n  handleLoadPreviousSession() {\n    this.props.loadPreviousSession(this.state.value);\n    this.setState({ value: 'placeholder' });\n  }\n\n  archivedSessionOptions() {\n    return this.props.archivedSessions.map((oldSess) => {\n      return (\n        <option value={oldSess.id} key={oldSess.id}>\n          {oldSess.videoId + '   ------   Last modified: ' + oldSess.lastModified.toLocaleTimeString()}\n        </option>\n      )\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"LoadPrevious\">\n        Previous Sessions\n        <select value={this.state.value}\n                disabled={this.props.archivedSessions.length < 1}\n                onChange={this.handleChange}>\n          <option value=\"placeholder\" disabled>Choose a previous session to load</option>\n          {this.archivedSessionOptions()}\n        </select>\n        <button disabled={this.state.value === 'placeholder'}\n                onClick={this.handleLoadPreviousSession}>\n          Load Previous Session\n        </button>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    archivedSessions: state.archivedSessions,\n  }\n};\n\nexport default connect(\n    mapStateToProps,\n    { loadPreviousSession }\n)(LoadPrevious)\n","import React from 'react';\nimport '../App.css';\nimport VideoOptions from './VideoOptions';\nimport LoadPrevious from \"./LoadPrevious\";\n\nclass Navbar extends React.Component {\n  render() {\n    return <div className=\"Navbar Card\">\n      <div className=\"Title\">\n        SHULTZ-CAST\n      </div>\n      <VideoOptions/>\n      <LoadPrevious/>\n    </div>\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport '../App.css';\nimport { connect } from 'react-redux'\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      iFrameHeight: 315,\n      iFrameWidth: 560,\n    };\n    this.myRef = React.createRef();\n    this.handleResize = this.handleResize.bind(this);\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  componentDidMount() {\n    this.handleResize();\n  }\n\n  handleResize() {\n    if (this.myRef.current) {\n      this.setState({\n        iFrameHeight: this.myRef.current.clientHeight,\n        iFrameWidth: this.myRef.current.clientWidth,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"PlayerWrapper\" ref={this.myRef}>\n        <ReactIFrame width={this.state.iFrameWidth}\n                     height={this.state.iFrameHeight}\n                     src={'https://www.youtube.com/embed/' + this.props.videoId}/>\n      </div>\n    );\n  }\n}\n\nclass ReactIFrame extends React.Component {\n  render() {\n    return(\n        <iframe src={this.props.src}\n                height={this.props.height}\n                width={this.props.width}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen>\n        </iframe>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return state.currentSession;\n};\n\nexport default connect(\n    mapStateToProps,\n)(Player)\n","import React from 'react';\nimport '../App.css';\nimport { connect } from 'react-redux'\nimport { addNote } from '../actions';\n\nclass Notepad extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  handleKeyPress(event) {\n    if(event.key === 'Enter'){\n      event.preventDefault();\n      const textArea = document.getElementById('notepadTextarea');\n      this.props.addNote(textArea.value);\n      textArea.value = '';\n    }\n  }\n\n  notes() {\n    return this.props.notes.map((note) => {\n      return (\n          <div className=\"Note\" key={note.noteTime.toISOString()}>\n            <div className=\"NoteText\">\n              {note.noteText}\n            </div>\n            <div className=\"NoteTime\">\n              {note.noteTime.toLocaleTimeString()}\n            </div>\n          </div>\n      )\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Notepad Card\">\n        <div className=\"Header Card\">\n          Notepad\n          <div className=\"NotepadInfo\">\n            Type your notes along with the video. If you start a new session, your notes will be saved in the archive.\n          </div>\n        </div>\n        <div className=\"Notes\">\n          {this.notes()}\n        </div>\n        <div className=\"NotepadInput\">\n          <textarea id=\"notepadTextarea\"\n                    placeholder=\"Type notes here. Press enter to add note\"\n                    onKeyPress={this.handleKeyPress}>\n          </textarea>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notes: state.currentSession.notes,\n  }\n};\n\nexport default connect(\n    mapStateToProps,\n    { addNote }\n)(Notepad);\n","import React from 'react';\nimport Player from './Player.js';\nimport Notepad from './Notepad.js';\nimport Linkshare from \"./Linkshare\";\nimport '../App.css';\n\nclass AppBody extends React.Component {\n  render() {\n    return (\n        <div className=\"Body\">\n          <div className=\"LeftSide\">\n            <Player/>\n            {/*<Linkshare/>*/}\n          </div>\n          <div className=\"RightSide\">\n            <Notepad/>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default AppBody;\n","import React from 'react';\nimport '../App.css';\n\nclass Linkshare extends React.Component {\n  render() {\n    return (\n        <div className=\"LinkshareWrapper\">\n          <div className=\"LinkshareBody Card\">\n            Linkshare\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Linkshare;\n","import React from 'react';\nimport Navbar from './components/Navbar.js';\nimport AppBody from \"./components/AppBody\";\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <Navbar/>\n          <AppBody/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { startNewSession } from './actions';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst initialState = {\n  currentSession: null,\n  archivedSessions: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'START_NEW_SESSION':\n      return Object.assign({}, state, {\n        currentSession: {\n          id: uuidv4(),\n          videoId: action.videoId,\n          sessionStart: new Date(),\n          notes: [],\n        },\n        archivedSessions: state.currentSession ? [\n          ...state.archivedSessions,\n          {\n            ...state.currentSession,\n            lastModified: new Date(),\n          }\n        ] : [\n          ...state.archivedSessions,\n        ],\n      });\n    case 'LOAD_PREVIOUS_SESSION':\n      const prevSession = state.archivedSessions.find(oldSess => oldSess.id === action.sessionId);\n      if (prevSession) {\n        return Object.assign({}, state, {\n          // remove chosen selection to archived, while adding current session\n          archivedSessions: [\n            ...state.archivedSessions.filter(oldSess => oldSess.id !== action.sessionId),\n            {\n              ...state.currentSession,\n              lastModified: new Date(),\n            },\n          ],\n          currentSession: {\n              ...prevSession,\n          },\n        });\n      }\n      console.error('Previous session not found');\n      return state;\n    case 'ADD_NOTE':\n      return Object.assign({}, state, {\n        currentSession: {\n          ...state.currentSession,\n          notes: addNote(state.currentSession.notes, action),\n        },\n      });\n    default:\n      return state;\n  }\n};\n\nconst addNote = (state = [], action) => {\n  if (action.noteText) {\n    return [\n      ...state,\n      {\n        noteText: action.noteText,\n        noteTime: new Date(),\n      }\n    ];\n  }\n  return state;\n};\n\nconst store = createStore(reducer, initialState);\nconst unsubscribe = store.subscribe(() => console.log(store.getState()));\n\nstore.dispatch(startNewSession('ru4U_T83uOU'));\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}